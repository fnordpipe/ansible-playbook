---
- name: install packages
  portage:
    name: app-crypt/cfssl
    getbinpkg: yes
    quiet: yes

- name: link initscript
  file:
    src: /etc/init.d/cfssl
    dest: /etc/runlevels/default/cfssl
    state: link

- name: create ca config
  template:
    src: "{{ item['src'] }}"
    dest: "{{ item['dest'] }}"
    owner: cfssl
    group: cfssl
    mode: 0640
  with_items:
    - { src: "gentoo/etc/cfssl/config.json.j2", dest: "/etc/cfssl/config.json" }
    - { src: "gentoo/etc/cfssl/csr/rootca.json.j2", dest: "/etc/cfssl/csr/rootca.json" }
  notify:
    - restart cfssl

- name: create rootCA
  shell: "cfssl gencert -initca -config /etc/cfssl/config.json -profile rootca /etc/cfssl/csr/rootca.json | cfssljson -bare rootca"
  args:
    creates: "/var/lib/cfssl/rootca.pem"
    chdir: /var/lib/cfssl
  register: cfsslRootCa

- name: create host certificate
  shell: "cfssl gencert -ca rootca.pem -ca-key rootca-key.pem -config /etc/cfssl/config.json -profile server /etc/cfssl/csr/{{ inventory_hostname }}.json | cfssljson -bare {{ inventory_hostname }}"
  args:
    creates: "/var/lib/cfssl/{{ inventory_hostname }}.pem"
    chdir: /var/lib/cfssl
  register: cfsslHostCert

- name: create nginx certificate
  shell: "cat {{ inventory_hostname }}.pem rootca.pem > /etc/ssl/{{ inventory_hostname }}-nginx.pem"
  args:
    chdir: /var/lib/cfssl
  when: cfsslHostCert.changed == True
  notify:
    - restart nginx

- name: create certificate
  shell: "cp -p {{ inventory_hostname }}.pem /etc/ssl/{{ inventory_hostname }}.pem"
  args:
    chdir: /var/lib/cfssl
  when: cfsslHostCert.changed == True
  notify:
    - restart nginx

- name: create certificate key
  shell: "cp -p {{ inventory_hostname }}-key.pem /etc/ssl/{{ inventory_hostname }}-key.pem"
  args:
    chdir: /var/lib/cfssl
  when: cfsslHostCert.changed == True
  notify:
    - restart nginx

- name: create /etc/ssl/rootca.pem
  shell: "cp -p rootca.pem /etc/ssl/rootca.pem"
  args:
    chdir: /var/lib/cfssl
  when: cfsslRootCa.changed == True
  notify:
    - restart nginx

- name: create nginx config
  template:
    src: gentoo/etc/nginx/conf.d/cfssl.conf.j2
    dest: /etc/nginx/conf.d/cfssl.conf
    owner: root
    group: root
    mode: 0644
  notify:
    - restart nginx

- name: update permissions
  file:
    dest: "{{ item['dest'] }}"
    owner: "{{ item['owner'] }}"
    group: "{{ item['group'] }}"
    mode: "{{ item['mode'] }}"
    recurse: "{{ item['recurse'] }}"
    state: "{{ item['state'] }}"
  with_items:
    - { dest: /var/lib/cfssl, owner: cfssl, group: cfssl, mode: '0750', recurse: yes, state: directory }
    - { dest: "/etc/ssl/{{ inventory_hostname }}.pem", owner: root, group: ssl, mode: '0640', recurse: no, state: file }
    - { dest: "/etc/ssl/{{ inventory_hostname }}-key.pem", owner: root, group: ssl, mode: '0640', recurse: no, state: file }
    - { dest: "/etc/ssl/rootca.pem", owner: root, group: ssl, mode: '0644', recurse: no, state: file }

- name: start initscript
  service:
    name: cfssl
    state: started
